{"version":3,"sources":["components/header/Header.jsx","components/figure/Figure.jsx","components/wrongLetters/WrongLetters.jsx","components/word/Word.jsx","components/notification/Notification.jsx","helpers/helpers.js","components/popup/Popup.jsx","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","id","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","console","log","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e3310a3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Hnagman</h1>\r\n            <p>Find the hidden word</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length;\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* ROD */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n      {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n      {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Figure;\r\n","import React from \"react\";\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div id=\"wrong-letters\">\r\n        {wrongLetters.length > 0 && <p>Wrong</p>}\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i + 20}>{letter}</span>)\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, \",\", curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrongLetters;\r\n","import React from \"react\";\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  console.log(selectedWord);\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split(\"\").map((letter, i) => {\r\n        return (\r\n          <span className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : \"\"}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? \"show\" : \"\"}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = \"win\";\r\n\r\n  //check wins\r\n  word.split(\"\").forEach((letter) => {\r\n    if (!correct.includes(letter)) {\r\n      status = \"\";\r\n    }\r\n  });\r\n\r\n  //check for loss\r\n  if (wrong.length === 6) status = \"lose\";\r\n\r\n  return status;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { checkWin } from \"../../helpers/helpers\";\r\n\r\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\r\n  let finalMessage = \"\";\r\n  let finalMessageRevealWord = \"\";\r\n  let playable = true;\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === \"win\") {\r\n    finalMessage = \"Congratualtions! You won!\";\r\n    playable = false;\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === \"lose\") {\r\n    finalMessage = \"Unfortunately, you LOST\";\r\n    playable = false;\r\n    finalMessageRevealWord = `..... the word was: ${selectedWord}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"popup-container\"\r\n      style={finalMessage !== \"\" ? { display: \"flex\" } : {}}\r\n    >\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Figure from \"./components/figure/Figure\";\nimport WrongLetters from \"./components/wrongLetters/WrongLetters\";\nimport Word from \"./components/word/Word\";\nimport Notification from \"./components/notification/Notification\";\nimport Popup from \"./components/popup/Popup\";\nimport { showNotification as show } from \"./helpers/helpers\";\n\nconst words = [\"application\", \"programming\", \"interface\", \"wizard\"];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((wrongLetters) => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeydown);\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [correctLetters, playable, wrongLetters]);\n\n  const playAgain = () => {\n    setPlayable(true);\n\n    //Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}